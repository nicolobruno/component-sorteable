{"ast":null,"code":"var _jsxFileName = \"/Users/nlobruno/Documents/Proyects/generic-map/src/components/Map/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport PropTypes from \"prop-types\";\nimport ButtonContainer from \"./components/ButtonContainer\";\nimport { STYLES_MAP, ZOOM } from \"./constants\";\nimport { formatNumberDecimal } from \"./utils\";\nimport \"./styles.css\";\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      zoom: 2\n    };\n\n    this.handleZoomChange = zoom => this.setState({\n      zoom\n    });\n\n    this.handleZoomIn = () => this.handleZoomChange(this.state.zoom + ZOOM);\n\n    this.handleZoomOut = () => this.handleZoomChange(this.state.zoom - ZOOM);\n\n    this.handleResetZoom = () => this.setState({\n      zoom: 2\n    });\n  }\n\n  render() {\n    const _this$props$data = this.props.data,\n          width = _this$props$data.width,\n          height = _this$props$data.height,\n          center = _this$props$data.center,\n          scale = _this$props$data.scale,\n          currency = _this$props$data.currency,\n          map = _this$props$data.map;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ButtonContainer, {\n      handleResetZoom: this.handleResetZoom,\n      handleZoomIn: this.handleZoomIn,\n      handleZoomOut: this.handleZoomOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      zoom: this.state.zoom,\n      center: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: map,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map(geography => {\n      const geographyValue = \"\".concat(currency, \" \").concat(formatNumberDecimal(geography.properties.VALUE));\n      return React.createElement(Geography, {\n        key: geography.properties.NAME,\n        \"data-tip\": \"\".concat(geography.properties.NAME, \" \").concat(geographyValue),\n        geography: geography,\n        projection: projection,\n        precision: 0.5,\n        style: {\n          default: STYLES_MAP.default,\n          hover: STYLES_MAP.hover,\n          pressed: STYLES_MAP.pressed\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    })))), React.createElement(ReactTooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nMap.defaultProps = {\n  width: 600,\n  height: 500,\n  center: 0,\n  scale: 350,\n  zoom: 0,\n  currency: \"\"\n};\nMap.propTypes = {\n  data: PropTypes.object\n};\nexport default Map;","map":{"version":3,"sources":["/Users/nlobruno/Documents/Proyects/generic-map/src/components/Map/index.js"],"names":["React","Component","Fragment","ComposableMap","ZoomableGroup","Geographies","Geography","ReactTooltip","PropTypes","ButtonContainer","STYLES_MAP","ZOOM","formatNumberDecimal","Map","state","zoom","handleZoomChange","setState","handleZoomIn","handleZoomOut","handleResetZoom","render","props","data","width","height","center","scale","currency","map","geographies","projection","geography","geographyValue","properties","VALUE","NAME","default","hover","pressed","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport PropTypes from \"prop-types\";\n\nimport ButtonContainer from \"./components/ButtonContainer\";\nimport { STYLES_MAP, ZOOM } from \"./constants\";\nimport { formatNumberDecimal } from \"./utils\";\nimport \"./styles.css\";\n\nclass Map extends Component {\n  state = { zoom: 2 };\n\n  handleZoomChange = zoom => this.setState({ zoom });\n\n  handleZoomIn = () => this.handleZoomChange(this.state.zoom + ZOOM);\n\n  handleZoomOut = () => this.handleZoomChange(this.state.zoom - ZOOM);\n\n  handleResetZoom = () => this.setState({ zoom: 2 });\n\n  render() {\n    const { width, height, center, scale, currency, map } = this.props.data;\n    return (\n      <Fragment>\n        <ButtonContainer\n          handleResetZoom={this.handleResetZoom}\n          handleZoomIn={this.handleZoomIn}\n          handleZoomOut={this.handleZoomOut}\n        />\n        <hr />\n        <ComposableMap\n          projectionConfig={{ scale }}\n          width={width}\n          height={height}\n        >\n          <ZoomableGroup zoom={this.state.zoom} center={center}>\n            \n              <Geographies geography={map}>\n                {(geographies, projection) =>\n                  geographies.map(geography => {\n                    const geographyValue = `${currency} ${formatNumberDecimal(\n                      geography.properties.VALUE\n                    )}`;\n                    return (\n                      <Geography\n                        key={geography.properties.NAME}\n                        data-tip={`${\n                          geography.properties.NAME\n                        } ${geographyValue}`}\n                        geography={geography}\n                        projection={projection}\n                        precision={0.5}\n                        style={{\n                          default: STYLES_MAP.default,\n                          hover: STYLES_MAP.hover,\n                          pressed: STYLES_MAP.pressed\n                        }}\n                      />\n                    );\n                  })\n                }\n              </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n        <ReactTooltip />\n      </Fragment>\n    );\n  }\n}\n\nMap.defaultProps = {\n  width: 600,\n  height: 500,\n  center: 0,\n  scale: 350,\n  zoom: 0,\n  currency: \"\"\n};\n\nMap.propTypes = {\n  data: PropTypes.object\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}