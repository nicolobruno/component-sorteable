{"ast":null,"code":"var _jsxFileName = \"/Users/nlobruno/Documents/Proyects/generic-map/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport PropTypes from \"prop-types\";\nimport ButtonContainer from \"./components/Map/components/ButtonContainer\";\nimport { STYLES_MAP, ZOOM, MAP_JSON } from \"./components/Map/constants\";\nimport { formatNumberDecimal } from \"./components/Map/utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      zoom: 2\n    };\n\n    this.handleZoomChange = zoom => this.setState({\n      zoom\n    });\n\n    this.handleZoomIn = () => this.handleZoomChange(this.state.zoom + ZOOM);\n\n    this.handleZoomOut = () => this.handleZoomChange(this.state.zoom - ZOOM);\n\n    this.handleResetZoom = () => this.setState({\n      zoom: 2\n    });\n  }\n\n  render() {\n    const data = {\n      map: MAP_JSON,\n      width: 600,\n      height: 500,\n      center: [-62, -40],\n      scale: 420,\n      currency: \"$\"\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ButtonContainer, {\n      handleResetZoom: this.handleResetZoom,\n      handleZoomIn: this.handleZoomIn,\n      handleZoomOut: this.handleZoomOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(ComposableMap, {\n      projectionConfig: data.scale,\n      width: data.width,\n      height: data.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      zoom: this.state.zoom,\n      center: data.center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: data.map,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, (geographies, projection) => geographies && geographies.map(geography => {\n      const geographyValue = \"\".concat(data.currency, \" \").concat(formatNumberDecimal(geography.properties.VALUE));\n      return React.createElement(Geography, {\n        key: geography.properties.NAME,\n        \"data-tip\": \"\".concat(geography.properties.NAME, \" \").concat(geographyValue),\n        geography: geography,\n        projection: projection,\n        precision: 0.5,\n        style: {\n          default: STYLES_MAP.default,\n          hover: STYLES_MAP.hover,\n          pressed: STYLES_MAP.pressed\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    })))), React.createElement(ReactTooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nApp.defaultProps = {\n  width: 600,\n  height: 500,\n  center: 0,\n  scale: 350,\n  zoom: 0,\n  currency: \"\"\n};\nApp.propTypes = {\n  data: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/Users/nlobruno/Documents/Proyects/generic-map/src/App.js"],"names":["React","Component","Fragment","ComposableMap","ZoomableGroup","Geographies","Geography","ReactTooltip","PropTypes","ButtonContainer","STYLES_MAP","ZOOM","MAP_JSON","formatNumberDecimal","App","state","zoom","handleZoomChange","setState","handleZoomIn","handleZoomOut","handleResetZoom","render","data","map","width","height","center","scale","currency","geographies","projection","geography","geographyValue","properties","VALUE","NAME","default","hover","pressed","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport PropTypes from \"prop-types\";\n\nimport ButtonContainer from \"./components/Map/components/ButtonContainer\";\nimport { STYLES_MAP, ZOOM, MAP_JSON } from \"./components/Map/constants\";\nimport { formatNumberDecimal } from \"./components/Map/utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { zoom: 2 };\n\n  handleZoomChange = zoom => this.setState({ zoom });\n\n  handleZoomIn = () => this.handleZoomChange(this.state.zoom + ZOOM);\n\n  handleZoomOut = () => this.handleZoomChange(this.state.zoom - ZOOM);\n\n  handleResetZoom = () => this.setState({ zoom: 2 });\n\n  render() {\n    const data = {\n      map: MAP_JSON,\n      width: 600,\n      height: 500,\n      center: [-62, -40],\n      scale: 420,\n      currency: \"$\"\n    };\n    return (\n      <Fragment>\n        <ButtonContainer\n          handleResetZoom={this.handleResetZoom}\n          handleZoomIn={this.handleZoomIn}\n          handleZoomOut={this.handleZoomOut}\n        />\n        <hr />\n        <ComposableMap\n          projectionConfig={data.scale}\n          width={data.width}\n          height={data.height}\n        >\n          <ZoomableGroup zoom={this.state.zoom} center={data.center}>\n            <Geographies geography={data.map}>\n              {(geographies, projection) =>\n                geographies && geographies.map(geography => {\n                  const geographyValue = `${data.currency} ${formatNumberDecimal(\n                    geography.properties.VALUE\n                  )}`;\n                  return (\n                    <Geography\n                      key={geography.properties.NAME}\n                      data-tip={`${\n                        geography.properties.NAME\n                      } ${geographyValue}`}\n                      geography={geography}\n                      projection={projection}\n                      precision={0.5}\n                      style={{\n                        default: STYLES_MAP.default,\n                        hover: STYLES_MAP.hover,\n                        pressed: STYLES_MAP.pressed\n                      }}\n                    />\n                  );\n                })\n              }\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n        <ReactTooltip />\n      </Fragment>\n    );\n  }\n}\n\nApp.defaultProps = {\n  width: 600,\n  height: 500,\n  center: 0,\n  scale: 350,\n  zoom: 0,\n  currency: \"\"\n};\n\nApp.propTypes = {\n  data: PropTypes.object\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}